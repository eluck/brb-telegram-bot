const path = require('path');
const { Composer, Markup } = require('micro-bot');
const TelegrafI18n = require('telegraf-i18n');

const sendWelcome = require('./common/send_welcome');
const sendMenu = require('./common/send_menu');
const coffeeMenu = require('./common/coffee_menu');

const bot = new Composer();
const i18n = new TelegrafI18n({
  defaultLanguage: 'ru',
  directory: path.resolve(__dirname, 'locales')
});


bot.use(i18n);
bot.command('/start', sendWelcome, sendMenu);
bot.command('help', ctx => ctx.i18n.t('common.help'));





// Scenario blueprint

const Order = [];

bot.hears('‚òïÔ∏è –ö–æ—Ñ–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–æ–ª–æ–∫–∞', coffeeMenu);

bot.hears('–ö–∞–ø—É—á–∏–Ω–æ', ctx => ctx.reply('–í—ã–±–µ—Ä–µ—Ç–µ –æ–±—ä–µ–º', Markup
  .keyboard([
    ['–ë–æ–ª—å—à–æ–π (130–†)', '–ú–∞–ª–µ–Ω—å–∫–∏–π (100–†)']])
  .resize()
  .extra()));

bot.hears('–ë–æ–ª—å—à–æ–π (130–†)', ctx => ctx.reply('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∑–∞–∫–∞–∑—ã', Order.push('- –ö–∞–ø—É—á–∏–Ω–æ –±–æ–ª—å—à–æ–π (130–†)'), ctx.reply(ctx.i18n.t('common.menuMessage'), Markup
  .keyboard([
    [ctx.i18n.t('common.menu.coffee'), ctx.i18n.t('common.menu.altcoffee')],
    [ctx.i18n.t('common.menu.tea'), ctx.i18n.t('common.menu.coctails')],
    [ctx.i18n.t('common.menu.breakfast'), ctx.i18n.t('common.menu.decerts')],
    [ctx.i18n.t('common.menu.order')]])
  .resize()
  .extra())));

bot.hears('üìã –ó–∞–∫–∞–∑', ctx => ctx.reply(Order[0], Markup
  .keyboard([
    ['–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑']])
  .resize()
  .extra()));


bot.hears('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑', ctx => ctx.reply('–í–∞—à –∫–æ—Ñ–µ —É–∂–µ –≥–æ—Ç–æ–≤–∏—Ç—Å—è! Be right back!', Markup
  .keyboard([
    ['–ù–æ–≤—ã–π –∑–∞–∫–∞–∑']])
  .resize()
  .extra()));

bot.hears('–ù–æ–≤—ã–π –∑–∞–∫–∞–∑', coffeeMenu);


module.exports = bot;
